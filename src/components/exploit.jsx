import React, { Component } from 'react';
import * as exploits from '../json/exploits.json';
import * as info from '../json/information.json';
import '../styles/exploit.css';
import Result from './result';
import XSSLink from './xss-link';

class Exploit extends Component {

    selectExploit(uid) {
        this.setState({
            uid: uid
        });
        this.props.selectExploit(uid);
    }

    render() {
        if (!this.props.uid) {
            // show all exploit
            let results = [];
            Object.keys(exploits).forEach((key) => {
                results.push(<Result exploit={key} selectExploit={this.selectExploit.bind(this)} key={key} />);
            });
            return (results);
        } else {
            // show single exploit
            const exploit = exploits[this.props.uid];
            let defsJSX = [];
            exploit.types.forEach(type => {
                defsJSX.push(
                    <p key={type} className="def">
                        <b>{info[type].abbreviation} [{info[type].full}] - </b>
                        {info[type].definition}
                    </p>
                );
            });
            let exploitsJSX = [];
            Object.keys(exploit.exploits).forEach(key => {
                const example = exploit.exploits[key].example;
                let interactive = [];
                if (example.type === 'xss-link') {
                    interactive.push(<XSSLink key={key} data={example} />);
                }
                exploitsJSX.push(
                    <div key={key}>
                        <h3>{exploit.exploits[key].title} ({exploit.date})</h3>
                        {interactive}
                    </div>
                );
            })
            return (
                <div>
                    <h3>Exploits</h3>
                    {defsJSX}
                    {exploitsJSX}
                </div>
            );
        }
    }
}

export default Exploit;